ackage io.firstPackage.topics;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

//Spring going to create an instance for this business service and have the dependency between controllers and this business service
@Service
public class TopicService {
	
	@Autowired
	private TopicRepository topicRepository;
	
	
	//Arrays.asList is immutable so we can not add or change anything inside that but if we want to make it mutable then we an do like below
	public List<Topic> topics = new ArrayList<>(Arrays.asList(
			new Topic("1", "maths", "very hectic"),
			new Topic("2", "science", "very confusing"),
			new Topic("4", "social", "Interesting")
			));
	
	/**
	 * Return ths particular topic based on topic id
	 * @param id
	 * @return
	 */
	public Topic getTopic(String id) {
		return topics.stream().filter(value -> value.getId().equalsIgnoreCase(id)).findFirst().get();
	}
	
	//This method will update the topic and return all the topics along with updated one
	public List<Topic> updateTopic(String id, Topic topic) {
		for(int i = 0; i < topics.size(); i++) {
			Topic t = topics.get(i);
			if(t.getId().equals(id)) {
				topics.set(i, topic);
			}
		}
		return topics;
	}
	
	public List<Topic> addTopic(Topic topic) {
		topics.add(topic);
		return topics;
	}
	
	public List<Topic> deleteTopic(String id) {
		Topic topic = topics.stream().filter(value -> value.getId().equalsIgnoreCase(id)).findFirst().get();
		topics.remove(topic);
		return topics;
	}
	
	/**
	 * 
	 * @return all topics
	 */
	public List<Topic> getAllTopicsNew() {
		List<Topic> topics = new ArrayList<>();
		topicRepository.findAll().forEach(topics::add);
		return topics;
	}
	
	public Optional<Topic> getTopicNew(String id) {
		return topicRepository.findById(id);
	}
	
	public void addTopicNew(Topic topic) {
		topicRepository.save(topic);
	}
	
	public void updateTopicNew(String id, Topic topic) {
		topicRepository.save(topic);
	}
	
	public void deleteTopicNew(String id) {
		topicRepository.deleteById(id);
		
	}
	
	

}
